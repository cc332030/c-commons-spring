
rootProject.name = 'c-commons-spring'

include 'c-spring-entity'
include 'c-spring-constant'
include 'c-spring-model'

include 'c-spring-util'

include 'c-spring-dao'
include 'c-spring-service'

include 'c-spring-cache'
include 'c-spring-cache:c-spring-cache-base'
include 'c-spring-cache:c-spring-cache-redis'

include 'c-spring-web'

include 'c-spring-app'
include 'c-spring-app:c-spring-app-model'
include 'c-spring-app:c-spring-app-dao'
include 'c-spring-app:c-spring-app-service'
include 'c-spring-app:c-spring-app-web'

include 'c-spring-api'
include 'c-spring-api:c-spring-api-model'
include 'c-spring-api:c-spring-api-dao'
include 'c-spring-api:c-spring-api-service'
include 'c-spring-api:c-spring-api-web'

include 'c-spring-task'
include 'c-spring-task:c-spring-task-model'
include 'c-spring-task:c-spring-task-dao'
include 'c-spring-task:c-spring-task-service'
include 'c-spring-task:c-spring-task-web'


import org.apache.tools.ant.taskdefs.condition.Os

enableFeaturePreview('VERSION_CATALOGS')

def isWindows = Os.isFamily(Os.FAMILY_WINDOWS)

dependencyResolutionManagement {

  repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)

  // see https://github.com/cc332030/init-gradle-action
  repositories {

    mavenLocal()

    if (isWindows) {

      maven {
        url "https://maven.aliyun.com/repository/public"
      }
      maven {
        url repoReleaseAliyun
        credentials {
          username aliyunPackagesUsername
          password aliyunPackagesPassword
        }
      }
      maven {
        url repoSnapshotAliyun
        credentials {
          username aliyunPackagesUsername
          password aliyunPackagesPassword
        }
      }
    } else {

      mavenCentral()
      maven {
        url repoSnapshotSonatype
      }
      maven {
        url repoReleaseSonatype
      }
    }
  }

  versionCatalogs {
    libs {
      from(group: 'com.c332030', name: 'c-commons-catalog', version: '1.0.0')
    }
  }
}
